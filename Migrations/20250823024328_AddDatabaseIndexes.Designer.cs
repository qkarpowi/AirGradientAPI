// <auto-generated />
using System;
using AirGradientAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AirGradientAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250823024328_AddDatabaseIndexes")]
    partial class AddDatabaseIndexes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AirGradientAPI.Entities.SensorDatum", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<float>("Atmp")
                        .HasColumnType("real");

                    b.Property<string>("ChipId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("Pm02")
                        .HasColumnType("integer");

                    b.Property<int>("Rco2")
                        .HasColumnType("integer");

                    b.Property<int>("Rhum")
                        .HasColumnType("integer");

                    b.Property<int>("Wifi")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("timestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("Rco2")
                        .HasDatabaseName("IX_SensorData_CO2");

                    b.HasIndex("timestamp")
                        .HasDatabaseName("IX_SensorData_Timestamp");

                    b.ToTable("SensorData");
                });
#pragma warning restore 612, 618
        }
    }
}
